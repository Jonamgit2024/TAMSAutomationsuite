package Demo.TAMSProject;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.IOException;
import java.time.Duration;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class TAMSLogin {
	WebDriver driver;

	@SuppressWarnings("deprecation")
	@Test(priority = 1, groups = {"Login"})
	public void weblaunch() throws IOException, InterruptedException {
		WebDriverManager.chromedriver();
		driver = new ChromeDriver();
		Properties prop = new Properties();
		FileInputStream fis = new FileInputStream("data.properties");
		prop.load(fis);
		driver.get(prop.getProperty("HomeURL"));
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
		driver.manage().window().maximize();
		Homepage hmpg = new Homepage(driver);
		Assert.assertTrue(hmpg.logoimage().isDisplayed());
	}

	@SuppressWarnings("deprecation")
	@Test(priority = 2, groups = {"Login"})
	public void zoomout75() throws AWTException {
		Homepage hmpg = new Homepage(driver);
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		hmpg.logoimage().click();
		Robot robot = new Robot();
		for (int i = 0; i < 3; i++) {
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_SUBTRACT);
			robot.keyRelease(KeyEvent.VK_SUBTRACT);
			robot.keyRelease(KeyEvent.VK_CONTROL);
		}
		Assert.assertTrue(hmpg.navigationlink7().isDisplayed());
	}
	@SuppressWarnings("deprecation")
	@Test(priority =3)
	public void login() throws Exception {
		Homepage hmpg = new Homepage(driver);
		Properties prop = new Properties();
		FileInputStream fis = new FileInputStream("data.properties");
		prop.load(fis);
		hmpg.loginlnk().click();
		hmpg.input1().sendKeys(prop.getProperty("correctusername1"));
		hmpg.input2().sendKeys(prop.getProperty("password1"));
		hmpg.loginbtn().click();
		TAMSHome thmp = new TAMSHome(driver);
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
		Assert.assertTrue(thmp.loginheader().isDisplayed());
	}
	
	@SuppressWarnings("deprecation")
	@Test(priority=4)
	public void TAMSNavbarVerification() throws Exception {
		Properties prop = new Properties();
		FileInputStream fis = new FileInputStream("data.properties");
		prop.load(fis);
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
		TAMSHome thmp = new TAMSHome(driver);
		thmp.anchorbutton1().click();
		Assert.assertEquals(driver.getCurrentUrl(),prop.getProperty("TAMSDashboardURL") );
		Assert.assertEquals(prop.getProperty("TAMSanchorbutton1"), thmp.anchorbutton1().getText());
		thmp.anchorbutton2().click();
		WebDriverWait wait = new WebDriverWait(driver,Duration.ofSeconds(10));
		wait.until(ExpectedConditions.elementToBeClickable(thmp.anchorbutton2()));
		Assert.assertEquals(prop.getProperty("TAMSanchorbutton2"), thmp.anchorbutton2().getText());
		thmp.anchorbutton3().click();
		Assert.assertEquals(prop.getProperty("TAMSanchorbutton3"), thmp.anchorbutton3().getText());
		thmp.anchorbutton4().click();
		Assert.assertEquals(prop.getProperty("TAMSanchorbutton4"), thmp.anchorbutton4().getText());
		thmp.anchorbutton5().click();
		Assert.assertEquals(prop.getProperty("TAMSanchorbutton5"), thmp.anchorbutton5().getText());
		thmp.anchorbutton6().click();
		Assert.assertEquals(prop.getProperty("TAMSanchorbutton6"), thmp.anchorbutton6().getText());
		thmp.anchorbutton7().click();
		Assert.assertEquals(prop.getProperty("TAMSanchorbutton7"), thmp.anchorbutton7().getText());
		thmp.anchorbutton8().click();
		Assert.assertTrue(thmp.anchorbutton8().getText().contains(prop.getProperty("TAMSanchorbutton8")));
		thmp.anchorbutton9().click();
		Assert.assertTrue(thmp.anchorbutton9().getText().contains(prop.getProperty("TAMSanchorbutton9")));
		thmp.anchorbutton10().click();
		Assert.assertTrue(thmp.anchorbutton10().getText().contains(prop.getProperty("TAMSanchorbutton10")));
	}
	
	@SuppressWarnings("deprecation")
	@Test(priority=5)
	public void TAMSUserVerification() throws Exception {
		Properties prop = new Properties();
		FileInputStream fis = new FileInputStream("data.properties");
		prop.load(fis);	
		driver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS);
		TAMSHome thmp = new TAMSHome(driver);
		thmp.anchorbutton1().click();
		Assert.assertTrue(thmp.loginheader().isDisplayed());
		Assert.assertTrue(thmp.headerleftimg().isDisplayed());
		System.out.println("User Data in the Header : "+(thmp.userdataheader().getText()));
		Assert.assertTrue(thmp.userdataheader().getText().contains(prop.getProperty("correctusername1")));
		Actions act = new Actions(driver);
		act.moveToElement(thmp.helpicon());
		Assert.assertTrue(thmp.helpicon().isDisplayed());
		act.moveToElement(thmp.pwdchngicon());
		Assert.assertTrue(thmp.pwdchngicon().isDisplayed());
		act.moveToElement(thmp.logout());
		Assert.assertTrue(thmp.pwdchngicon().isDisplayed());
		thmp.logout().click();
	}
	@Test(priority=6)
	public void closure() {
		driver.quit();
	}

}
